GMCDIR=../../gmc
GMC=$(GMCDIR)/gmc

OCAMLC=ocamlc
OCAMLOPT=ocamlopt
OCAMLDEP=ocamldep
OCAMLYACC=ocamlyacc
OCAMLLEX=ocamllex
INCLUDES=-I . -I .. # -I $(GMCDIR)    # all relevant -I options here
OCAMLFLAGS=$(INCLUDES)    # add other options for ocamlc here
OCAMLOPTFLAGS=$(INCLUDES) # add other options for ocamlopt here


# The list of object files for prog1
# OBJS=../mySupport.cmx ../common/derivation.cmx ../common/lexer.cmx \
#      core.cmx pp.cmx parser.cmx keywords.cmx main.cmx

OBJS=core.cmx pp.cmx parser.cmx keywords.cmx macroVars.cmx link.cmx

DEPEND += parser.ml core.ml ../lexer.ml

all: $(DEPEND) $(OBJS)
	# $(OCAMLOPT) -o $(PROGNAME) $(OCAMLFLAGS) $(OBJS)	
	$(OCAMLOPT) -pack -o $(PACKED).cmx $(OCAMLFLAGS) $(OBJS)

# Common rules
.SUFFIXES: .ml .mli .cmo .cmi .cmo

%.cmo: %.ml
	$(OCAMLC) $(OCAMLFLAGS) -c $<

%.cmi: %.mli
	$(OCAMLC) $(OCAMLFLAGS) -c $<

%.cmx: %.ml
	$(OCAMLOPT) $(OCAMLOPTFLAGS) -for-pack $(MODULEPATH) -c $<

parser.ml parser.mli: parser-local.mly ../common/parser-common.mly
	@rm -f $@
	cat parser-local.mly ../common/parser-common.mly > parser.mly
	$(OCAMLYACC) -v parser.mly
	@chmod -w $@

../lexer.ml: ../lexer.mll
	@rm -f $@
	$(OCAMLLEX) $<
	@chmod -w $@

core.ml: $(PROGNAME).gm
	@rm -f $@
	$(GMC) $< > $@ || rm -f $@
	@chmod -w $@

# Clean up
clean:
	rm -f $(PROGNAME)
	rm -f *.cm[iox] *.o *~ parser.mly parser.ml parser.mli parser.output core.ml .depend

# Dependencies
depend:: $(DEPEND)
	$(OCAMLDEP) -native $(INCLUDES) *.mli *.ml ../derivation.ml ../derivation.mli ../lexer.ml > .depend

-include .depend
