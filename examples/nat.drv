(S(Z) + S(Z)) * S(S(Z)) evalto S(S(S(S(Z)))) by E-Mult { 
  S(Z) + S(Z) evalto S(S(Z)) by E-Plus {
    S(Z) evalto S(Z) by E-Const {};
    S(Z) evalto S(Z) by E-Const {};
    S(Z) plus S(Z) is S(S(Z)) by P-Succ {
      Z plus S(Z) is S(Z) by P-Zero {}
    }
  };
  S(S(Z)) evalto S(S(Z)) by E-Const {};
  S(S(Z)) mult S(S(Z)) is S(S(S(S(Z)))) by M-Succ {
    S(Z) mult S(S(Z)) is S(S(Z)) by M-Succ {
      Z mult S(S(Z)) is Z by M-Zero {};
      S(S(Z)) plus Z is S(S(Z)) by P-Succ {
        S(Z) plus Z is S(Z) by P-Succ {
          Z plus Z is Z by P-Zero {}
        }
      }
    };
    S(S(Z)) plus S(S(Z)) is S(S(S(S(Z)))) by P-Succ {
      S(Z) plus S(S(Z)) is S(S(S(Z))) by P-Succ {
        Z plus S(S(Z)) is S(S(Z)) by P-Zero {}
      }
    }
  }
}    

