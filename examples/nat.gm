(* ペアノ自然数の和と積 *)

[BNF]

n,m in Nat ::= Z
          |  S(n)

e in Exp ::= n
          |  P(e,e)
          |  M(e,e)

(*
  Nat, Exp, n:Nat, m:Nat, Z:Nat[], S:Nat[Nat], Nat <: Exp,
*)

[Judgments]

(* セミコロンは入力と出力の区切り．宣言にだけ必要 *)

EvalTo(e; n);      
PlusIs(n1, n2; n3);
MultIs(n1, n2; n3);

[Rules]

E-Const: EvalTo(n, n) :- ;
E-Plus:  EvalTo(P(e1, e2), n) :- EvalTo(e1, n1), 
                                   EvalTo(e2, n2), 
                                   PlusIs(n1, n2, n);
E-Mult:  EvalTo(M(e1, e2), n) :- EvalTo(e1, n1), 
                                   EvalTo(e2, n2), 
                                   MultIs(n1, n2, n);

P-Zero: PlusIs(n, Z, n) :- ;
P-Succ: PlusIs(n1, S(n2), S(n)) :- PlusIs(n1, n2, n) ;

M-Zero: MultIs(n, Z, Z) :- ;
M-Succ: MultIs(n1, S(n2), n4) :- MultIs(n1, n2, n3), PlusIs(n3, n1, n4);
