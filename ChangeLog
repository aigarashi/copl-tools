2008-05-13  Atsushi Igarashi  <igarashi@localhost>

	* gmc/mySupport.ml (print_pos): Bug fix.
	* checker/main.ml: A small adjustment of the usage message.

	* checker/TypingML4: Fixed a bug in T-LetRec.
	* gmc/emit.ml (emit_exp_of_premises): Bug fix.  Be sure to discard
	all the derivations even when side condition fails.


2008-05-08  Atsushi Igarashi  <igarashi@localhost>

	* checker/TypingML4: new game for typing ML4 expressions.
	ML files other than core.ml are generated by emacs emerge.
	More modular pretty-printing routine in pp.ml.
	
	* gmc/mySupport.ml: Error or warning messages output to stderr.

2008-05-07  Atsushi Igarashi  <igarashi@localhost>

	* gmc/emit.ml (emit_ordinal): New function to emit an ordinal
	number but it doesn't work for numbers > 3 that come with "st",
	"nd", or "rd".
	* gmc/emit.ml (emit_coercion): New function to emit a coercion
	inside terms.

2008-05-06  Atsushi Igarashi  <igarashi@localhost>

	* gmc/lexer.mll: allows primes and underscores for an LCID.

	* gmc/emit.ml (emit_exp_of_premises): generates equations if
	premises share some output variables or one premise has multiple
	occurrences of the same variable.

	* checker/TypingML2: new game for typing ML2 expressions.
	
	* gmc/emit.ml: newline at the final line for the emitted program.

	* gmc/mode.ml: New module for mode analysis.
	* gmc/main.ml, gmc/mySupport.ml, gmc/syntax.ml, gmc/syntax.mli: 
	changes to incorporate mode analysis.

2008-04-19  Atsushi Igarashi  <igarashi@cornet>

	* checker/ML?/{ML2.gm, parser.mly, pp.ml}: primitive type bool is
	used for boolean values and expressions.

2008-04-16  Atsushi Igarashi  <igarashi@cornet>

	* checker/ML1/{ML1.gm, parser.mly, pp.ml}: primitive type bool is
	used for boolean values and expressions.
	* gmc/emit.ml: Qexp is emitted now with parentheses.

	* checker/main.ml: error handling for Stack_overflow.

2008-04-15  Atsushi Igarashi  <igarashi@cornet>

	* gmc/emit.ml: optimization to reduce generation of trivial equations.
	* checker/ML4: implemented.
	* gmc/emit.ml (emit_eqs): bug fix.

2008-04-08  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* example: renamed to `checker'.
	* checker/ML3: implemented.
	* checker/*/parser.mly: better handling	of unary minus

2008-04-04  Atsushi Igarashi  <igarashi@cornet>

	* gmc/emit.ml: (More) proper handling of quoted ML expressions in
	rules.  Specifically, the form `$o = (boolexp)` will be converted
	to let-binding whereas the form `(boolexp)` (without $o-type
	variables) will be to the expression verbatim.  See doc/main.tex,
	too.

	* examples/ML2.gm: representation of env is modified.
	* examples/ML2/{parser.mly, pp.ml}: according changes.
	
	* examples/common/main.ml: if file name is omitted, it reads from
	stdin. 
	
2008-04-03  Atsushi Igarashi  <igarashi@cornet>

	* gmc/emit.ml: All calls of Format.printf has been replaced with
	Format.fprintf.

2008-04-02  Atsushi Igarashi  <igarashi@cornet>

	* examples/ML2.gm: New file.
	* examples/ML2/{parser.mly, pp.ml, Makefile, keywords.ml}: New files.
	* examples/common/{Makefile, main.ml}: Necessary changes for ML2.
	* doc/main.tex: description of problems in implementing ML2.
	
	* examples/ML1/pp.ml: tidying up.
	

2008-04-01  Atsushi Igarashi  <igarashi@cornet>

	* gmc/parser.mly: better error handling.  (error handling code
	should be added.)
	* gmc/lexer.mll: line counting inside comments.
	* gmc/main.ml: now knows the input file name.

	* examples/common/lexer.mll: "?" and ";" are now scanned as
	symbolic keywords.  So, for example, "??" can be a single token in
	some game.  Now, only special characters are parens and braces.

	Names consisting only of lowercase characters are now categorized
	as a token LCID.  The parser of each game should allow both LCIDs
	and alphabetical names (ID) as a rule name.

	* examples/common/link.ml: function lcid() added.
	
	* examples/*/keywords.ml: "?" and ";" are listed as keywords.

2008-03-31  Atsushi Igarashi  <igarashi@cornet>

	* examples/ML1/pp.ml, examples/nat/pp.ml, examples/common/link.ml:
	error handling in derivation search.
	* examples/common/Makefile: better dependency descrpition.

	* gmc/emit.ml, gmc/emit.mli, gmc/main.ml: now partly use
	Format.fprintf.  Should use it consistently.  Needs further
	tidying up.

2008-03-31  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* gmc/parser.mly: allowing multiple metavars for one syntactic
	category.
	* gmc/syntax.ml, gmc/syntax.mli: accordingly changed.
	* examples/nat.gm: test of this feature.
	
2008-03-30  Atsushi Igarashi  <igarashi@cornet>

	* examples/ML1.gm: bug fix.
	* examples/ML1/parser.mly: support for partial derivations
	* gmc/emit.ml, gmc/main.ml, gmc/mySupport.ml: implementing backtracking.
	Hope it works.

2008-03-29  Atsushi Igarashi  <igarashi@cornet>

	* gmc/syntax.ml: augmenting judgment declarations with mode information.
	* gmc/parser.mly: Use semicolon to separate input and output arguments.
	* gmc/emit.ml: Modified accordingly.
	* examples/nat.gm: mode annotation attached.

	* gmc/emit.ml: module Prover to emit prover.
	* examples/common/lexer.mll: '?' for holes in partial judgment is
	added to the token list.
	* examples/nat/parser.mly: support for partial judgments.
	* examples/common/{main.ml, link.ml}: support of prover with -prove
	option. (combination with -full and -TeX options not supported
	yet.)

	* examples/common/Makefile.games: dependency description improved.

	* examples/nat.gm: exchanged the positons of tasu-kazu and
	tasareru-kazu.
	

2008-03-26  IGARASHI Atsushi  <igarashi@sato.kuis.kyoto-u.ac.jp>

	* examples/ML1/pp.ml: function to output judgments in TeX. still
	incomplete.

	* source code restructuring: lexer is functorized.  Modules
	for each game are packed in to one module.  Switch to choose a game.
	
2008-03-23  Atsushi Igarashi  <igarashi@cornet>

	* examples/common/syntax.ml, examples/nat/pp.ml: function to
	output derivations in TeX (-TeX flag).  

2008-03-22  Atsushi Igarashi  <igarashi@cornet>

	* gmc/emit.ml: function to format rules in TeX.

2008-03-21  IGARASHI Atsushi  <igarashi@sato.kuis.kyoto-u.ac.jp>

	* examples/common/main.ml: checker now takes more than one derivation.
	  Switch "-full" to display full derivations.
	* examples/common/lexer.mll: factoring out the common part of lexers.
	* examples/*/keywords.ml: keyword list, required by lexers
	* examples/ML1/pp.ml: pretty printer for ML1

2008-03-21  Atsushi Igarashi  <igarashi@cornet>

	* examples/common/syntax.ml: data structure and pretty printing
	functions common to all games.
	
	* examples/nat/pp.ml: pretty printer for natural numbers.
	
	* gmc/emit.ml: renamed from pp.ml to avoid collision with
	game-specific printers.

2008-03-20  Atsushi Igarashi  <igarashi@cornet>

	* examples/ML1: boolean added

2008-03-14  IGARASHI Atsushi  <igarashi@sato.kuis.kyoto-u.ac.jp>

	* examples/ML1.drv: sample derivation for ML1

	* examples/ML1: game for ML1 (int + binoperations)
	* changes for handling side conditions in rules.
	
2008-03-13  Atsushi Igarashi  <igarashi@cornet>

	* ML1.gm: formatting adjustment

