2009-10-19  Atsushi Igarashi  <igarashi@cornet>

	* checker/derivation.ml (print_derivs): Modified the way a derivation is printed.

2009-10-14  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* cgi/question.cgi (display-q): Different labels for buttons to
	send ansewrs by a file and a web form.
	* checker/ReduceNatExp: implemented.
	* cgi/questions.db: Questions revised.
	* cgi/index.cgi (main): transition from logout to login is set to
	2 seconds.

2009-10-04  Atsushi Igarashi  <igarashi@cornet>

	* Game names have been changed considerably:
	   NatExp -> EvalNatExp
	   NatLtX -> CompareNatLtX

	* ReduceNatExp: New game (not finished).

2009-09-25  Atsushi Igarashi  <igarashi@cornet>

	* checker/RefML4/RefML4.gm: bug fix in E-Assign.

2009-09-09  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* ML1/parser.mly, common/link.ml, common/Makefile.game,
	lexer.mll, Makefile, ML1/macroVars.ml: 

	Support of definitions.  Lexer recognizes '$' followed by a
	category name as a macro name.  The category names and their
	corresponding tokens are listed in macroVars.ml.  The concrete
	syntax for definitions is

	  def $<name> = <some expression>;

	The category of <some expression> depends on the <name>.  When
	Parser reduces a definition, it registers the definition to a hash
	table and when it's referenced in the following part, the hash
	table will be looked up.

	* */macroVars.ml:  New files to list up macro variable names.
	But, they should be generated from *.gm automatically.
	
	* */parser.mly:  Adaptation for the introduction of definitions.

2009-09-08  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* checker/ContML4: Syntax change:  ">>" in "v >> k evalto v" has
	been changed to "=>".
	
	* checker/ContML1, cgi/rules2TeX.scm: New game ContML1 for a
	gentle introduction to the idea of continuations.
	

2009-09-07  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* checker/RefML4, cgi/rules2TeX.scm : New game RefML4 for references.

2009-09-05  Atsushi Igarashi  <igarashi@cornet>

	* gmc/lexer.mll: Header name change: [BNF] -> [Syntax]
	* checker/ML6/pp.ml (print_judgment): Added missing parentheses after "when".
	* gmc/{emit.ml, parser.mly}: Support for a new form of syntax definition:

	   x in Var

	  (without ::= ...), which generates an OCaml type definition

	   type var = Var of string

	  which can be used to express different sets of identifiers.

2009-09-04  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* gmc/emit.ml (ML.Rules.emit_jdg, ML.Rules.emit_term, Prover.emit_term): 
	error handling for the failure of List.map2.

	* checker/ML4Cont/ML4Cont.gm: New game for first-class continuations.
	* cgi/Makefile: Changes for ML4Cont
	* cgi/README:
	* cgi/rules2TeX.scm

2009-07-30  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* gmc/emit.ml: fixed illegal escape characters.

2009-01-17  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* checker/ML?/parser.mly: Minus numbers have been disallowed to
	appear in some judgments due to the fix for unary minus.

2009-01-10  Atsushi Igarashi  <igarashi@cornet>

	* checker/PolyML{4,5}/PolyML{4,5}.gm: debugging T-LetRec.

2008-11-22  Atsushi Igarashi  <igarashi@cornet>

	* checker/lexer.mll: tokens for integer literals are now changed
	to one without minus; parsers should take care of unary minus.
	
	* checker/PolyML5/{pp.ml,keywords.ml,parser.mly}: Syntax for type
	   schemes changed from All('a,'b)['a->'b->'a] 
	   to 'a 'b.'a->'b->'a.

2008-11-21  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* checker/PolyML5/PolyML5.gm: New game for polymorphic typing for lists.

2008-10-31  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* cgi/: Each question comes with a link to a web page showing the
	rules of the game.
	* cgi/questions.db: ML3/ML4 questions added.

2008-10-29  Atsushi Igarashi  <igarashi@cornet>

	* cgi/questions.db: ML2 questions added.
	* cgi/rules2TeX.scm: spacing around binary op adjusted.

2008-10-28  Atsushi Igarashi  <igarashi@cornet>

	* cgi/process.cgi (main): improved error message.
	* cgi/index.cgi (display-sandbox):
 	* cgi/question.cgi (display-q): more consistent message.

2008-10-28  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* cgi/rules2TeX.scm (header-LaTeXMathML): url change.
	* cgi/process.cgi (main): removes garbage in output.

2008-10-23  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* cgi/hilight.scm (emphasize): Now lc2 is a required argument.

	* cgi/process.cgi (display-result,parse-errmsg): Parsing error
	messages of the form "line x, character y -- line z, character w".

	* cgi/index.cgi (display-qlist): space for the solved problem has
	been replaced by &nbsp;
	
	* cgi/questions.db: many typos:  We should automate the check
	to make sure the expression is valid.
	
2008-10-20  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* cgi/questions.db: Questions rearranged.

2008-09-29  Atsushi Igarashi  <igarashi@cornet>

	* checker/*/pp.ml: adapted for TeX output

2008-09-25  Atsushi Igarashi  <igarashi@cornet>

	* checker/NatExp/pp.ml: adapted for TeX output
	* checker/NatLt1/pp.ml: adapted for TeX output
	* checker/Nat/pp.ml: adapted for TeX output
	
2008-09-17  Atsushi Igarashi  <igarashi@cornet>

	* checker: nat -> Nat 

2008-09-16  Atsushi Igarashi  <igarashi@cornet>

	* Misc tidying up.
	* LaTeX2MathML has been downloaded.

	* checker/ML4/ML4.gm (E-Var, lookup): Variable lookup is changed
	so that it simply uses an ML function.

2008-09-15  Atsushi Igarashi  <igarashi@cornet>

	* gmc/emit.ml, gmc/emit.mli: tidying up the code

2008-09-14  Atsushi Igarashi  <igarashi@localhost>

	* cgi/rules2TeX.scm (bnf, format-bnf): Scheme functions to emit
	formatted BNF definitions.
	* gmc/emit.ml (Rules.TeX.emit_bnf,Rules.SExp.emit_bnf,tex_bnf,sexp_bnf):
	Functions to emit formatted BNF definitions.

2008-08-29  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* checker/ML{5,6}/parser.mly: Linearity of pattern variables
	are checked.

2008-08-28  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* checker/nat/nat.gm: The induction variable for plus and mult 
	has been swapped (again).

	* cgi/rules2TeX.scm: The metavar for run-time environments is 
	typeset as \mathcal{E}.

	* gmc/mySupport.ml (Pervasives.add_substitute): Adapted
	from Buffer.add_substitute with a bug fix.
	* gmc/mySupport.ml (Pervasives.escaed_for_Scheme): New
	function (adapted from String.escaped) to make a string escaped
	for an interpolating string in Scheme: A comma has to be doubled.
	* gmc/emit.ml (SExp.emit_qexp): now properly escapes commas and
	backslashes.

	* gmc/emit.ml ({Rules,TeX,SExp}.emit_term): 
	* gmc/main.ml (Syntax.of_game): true and false are
	treated as special metavariables of category "bool".  In output,
	they are never preceded by underscores.
	* checker/*/ML?.gm (E-IfT, E-IfF): Now, true and false are used in
	rules.
	
	* gmc/syntax.ml, gmc/emit.ml, gmc/lexer.mll, gmc/parser.mly: TeX
	  presentation for side conditions can be expressed by putting an
	  TeX string enclosed by % after a side condition `...`.
	* checker/*/*.gm: TeX presentations of side conditions are added.

2008-08-27  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* checker/ML6/ML6.gm: Added two missing rules NM-ConsConsL and
	NM-ConsConsR.
	* checker/ML?/parser.mly: bugs fixed.

	* gmc/emit.ml: Adapted to cooperate with LaTeX more smoothly.

2008-08-26  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* gmc/emit.ml (Emit.tex_rules): generates a command to list all rules.
	* gmc/main.ml: Option -TeX also takes the name of a game.  It will be
	attached to constructors in the ouput TeXcommands.
	* gmc/emit.ml (Emit.SExp): According changes.

	* checker/*/{pp.keywords.ml}, cgi/rules2TeX.scm: The keyword
	"mult" is changed to "times".

2008-08-23  Atsushi Igarashi  <igarashi@localhost>

	* gmc/syntax.ml (split_LCID): now splits numbers and primes in the suffix.
	* gmc/lexer.mll: in LCID and UCID, numbers and primes cannot be mixed.
	* gmc/emit.ml: According changes.

2008-08-22  Atsushi Igarashi  <igarashi@localhost>

	* cgi/rules2TeX.scm: Formatting functions completed.  There should
	be a better way, perhaps objects?

2008-08-22  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* checker/ML6/ML6.gm: E-MatchN slightly modified.
	* cgi/Makefile: rule to generate html files of the games.

	* rules2TeX.scm: moved to cgi/.

	* checker/*/parser.mly: A judgment for less than can now be
	written in two ways.

	* rules2TeX.scm: Game-specific functions defined.

	* gmc/main.ml: Option -sexp takes the name of a game.  It will be
	attached to constructors in the ouput sexp.
	* gmc/emit.ml (Emit.SExp): According changes.

2008-08-22  Atsushi Igarashi  <igarashi@localhost>

	* cgi/Makefile: New file.

2008-08-21  Atsushi Igarashi  <igarashi@localhost>

	* rules2TeX.scm: Scheme script to format rules in sexp.
	* gmc/emit.ml (sexp_rules): Generates Scheme definitions:
	rulenames for the list of rule names and rules for the list
	of formatted inference rules.

2008-08-21  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* gmc/emit.ml (Emit.SExp): New module to emit rules in sexp forms.
	* gmc/emit.ml (sexp_rules): New exported function to emit rules in sexp.
	* gmc/main.ml: new option -sexp to emit rules in sexp.

2008-08-19  Atsushi Igarashi  <igarashi@localhost>

	* cgi/: New directory for Scheme cgi scripts for web interface.

2008-08-15  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* checker/main.ml, common/link.ml, */parser.mly:
	New option "-against" to match the proved judment.
	
	* checker/main.ml: New option "-check" followed by the string of
	the derivation to check.

2008-08-14  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* checker/lexer.mll: '\r' should be included in the set of chars
	to be ignored.  Otherwise invocation through CGI doesn't work.

2008-06-14  Atsushi Igarashi  <igarashi@localhost>

	* checker/ML6/parser.mly: Resolved shift/reduce conflict found in
	nested longexps.

2008-05-31  Atsushi Igarashi  <igarashi@localhost>

	* checker/PolyML4/PolyML4.gm (closure): Fixed a wrong generalization.

2008-05-30  Atsushi Igarashi  <igarashi@localhost>

	* TypingML2/pp.ml (print_judgment): formatting change.

	* TypingML4/pp.ml (print_judgment): formatting change.

	* PolyML4/PolyML4.gm (inst): bug fix.  RHS shouldn't be a bound
	type variable.

	* PolyML4/pp.ml (pp_type_aux): List.nth counts elements of a list
	from 0.
	
	* PolyML4/pp.ml (pp_tyvardecls): new function(s) to print a type
	scheme correctly.
	
	* lexer.mll: Only uppercase names can contain hyphens. It prevents
	'a->'a from being parsed as "'" "a-" ">".  An apostorophe or comma
	cannot be a part of (long) symbolic names.

2008-05-30  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* PolyML4: new game for polymorphic typing.  Probably unfinished.
	* TypingML4: type variables (named by a prime follewed by an
	alphanumeric name) are added.
	
	* checker/lexer.mll: identifiers can now begin with an underscore.
	An apostrophe can be part of a symbolic name.  Underscore is
	removed from charcters for symbolic names.

	* gmc/mySupport.ml (Pervasives.pos): New function. pos a l returns
	the position of a in l.  If a is not in l, it raises Not_found.
	The first element is 1.

2008-05-29  Atsushi Igarashi  <igarashi@localhost>

	* ML6: new game for ML6 (pattern matching).
	* test.sh: new cases for ML6.

	* gmc/mySupport.ml (Pervasives.iteri): New function.  Iteration
	over a list with index (the first element is indexed by 1).
	
	* ML5/pp.ml (print_exp): Recovering missing parens for cons.
	* TypingML5/pp.ml (print_exp): Ditto.

	* gmc/emit.ml (emit_exp_of_premises): If a side condition of the
	form `$o = ...` contains a fresh metavariable $o, 'let $o = ...'
	is generated.  $o will be compared with other, later occurrences
	of the same variable.

2008-05-28  Atsushi Igarashi  <igarashi@localhost>

	* gmc/emit.ml (emit_pat_of_derivs): Side conditions are also given
	their own index numbers (but not printed in the pattern).  This
	will allow some metavars in side conditions to appear as declaration
	in the emitted code.
	
	* gmc/{syntax.ml, syntax.mli, parser.mly, lexer.mll, main.ml}: .gm
	  file now allows ML code at the end of the file with the tag
	  "[ML]".  The code will be inserted before generated functions so
	  that they can be referred to by rules of the game.

2008-05-18  Atsushi Igarashi  <igarashi@localhost>

	* checker/TypingML5: new game for typing ML5 expressions.  ML
	files other than core.ml are generated, as done for TypingML5, by
	emacs emerge.

2008-05-17  Atsushi Igarashi  <igarashi@localhost>

	* gmc/mode.ml: Warning message improvement.

2008-05-16  Atsushi Igarashi  <igarashi@localhost>

	* lexer.mll: An LCID now can contain apostrophes and underscores.
	* ML5/pp.ml: Cons needs parenthesized when it's an operand of
	a function application.

	* checker/{ML1,ML2,ML3,ML4,TypingML2}/pp.ml: Adapted more moduler
	pretty-printing functions.

	* checker/{ML2,ML3,ML4}/pp.ml: Small bug fix.
	* checker/ML5: New game for ML5 expressions.  Modular
	pretty-printing routine is imported from TypingML4.  
	* checker/Makefile: changes due to the new game.
	* gmc/parser.mly: better error message.

2008-05-13  Atsushi Igarashi  <igarashi@localhost>

	* gmc/mySupport.ml (print_pos): Bug fix.
	* checker/main.ml: A small adjustment of the usage message.

	* checker/TypingML4: Fixed a bug in T-LetRec.
	* gmc/emit.ml (emit_exp_of_premises): Bug fix.  Be sure to discard
	all the derivations even when side condition fails.


2008-05-08  Atsushi Igarashi  <igarashi@localhost>

	* checker/TypingML4: new game for typing ML4 expressions.
	ML files other than core.ml are generated by emacs emerge.
	More modular pretty-printing routine in pp.ml.
	
	* gmc/mySupport.ml: Error or warning messages output to stderr.

2008-05-07  Atsushi Igarashi  <igarashi@localhost>

	* gmc/emit.ml (emit_ordinal): New function to emit an ordinal
	number but it doesn't work for numbers > 3 that come with "st",
	"nd", or "rd".
	* gmc/emit.ml (emit_coercion): New function to emit a coercion
	inside terms.

2008-05-06  Atsushi Igarashi  <igarashi@localhost>

	* gmc/lexer.mll: allows primes and underscores for an LCID.

	* gmc/emit.ml (emit_exp_of_premises): generates equations if
	premises share some output variables or one premise has multiple
	occurrences of the same variable.

	* checker/TypingML2: new game for typing ML2 expressions.
	
	* gmc/emit.ml: newline at the final line for the emitted program.

	* gmc/mode.ml: New module for mode analysis.
	* gmc/main.ml, gmc/mySupport.ml, gmc/syntax.ml, gmc/syntax.mli: 
	changes to incorporate mode analysis.

2008-04-19  Atsushi Igarashi  <igarashi@cornet>

	* checker/ML?/{ML2.gm, parser.mly, pp.ml}: primitive type bool is
	used for boolean values and expressions.

2008-04-16  Atsushi Igarashi  <igarashi@cornet>

	* checker/ML1/{ML1.gm, parser.mly, pp.ml}: primitive type bool is
	used for boolean values and expressions.
	* gmc/emit.ml: Qexp is emitted now with parentheses.

	* checker/main.ml: error handling for Stack_overflow.

2008-04-15  Atsushi Igarashi  <igarashi@cornet>

	* gmc/emit.ml: optimization to reduce generation of trivial equations.
	* checker/ML4: implemented.
	* gmc/emit.ml (emit_eqs): bug fix.

2008-04-08  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* example: renamed to `checker'.
	* checker/ML3: implemented.
	* checker/*/parser.mly: better handling	of unary minus

2008-04-04  Atsushi Igarashi  <igarashi@cornet>

	* gmc/emit.ml: (More) proper handling of quoted ML expressions in
	rules.  Specifically, the form `$o = (boolexp)` will be converted
	to let-binding whereas the form `(boolexp)` (without $o-type
	variables) will be to the expression verbatim.  See doc/main.tex,
	too.

	* examples/ML2.gm: representation of env is modified.
	* examples/ML2/{parser.mly, pp.ml}: according changes.
	
	* examples/common/main.ml: if file name is omitted, it reads from
	stdin. 
	
2008-04-03  Atsushi Igarashi  <igarashi@cornet>

	* gmc/emit.ml: All calls of Format.printf has been replaced with
	Format.fprintf.

2008-04-02  Atsushi Igarashi  <igarashi@cornet>

	* examples/ML2.gm: New file.
	* examples/ML2/{parser.mly, pp.ml, Makefile, keywords.ml}: New files.
	* examples/common/{Makefile, main.ml}: Necessary changes for ML2.
	* doc/main.tex: description of problems in implementing ML2.
	
	* examples/ML1/pp.ml: tidying up.
	

2008-04-01  Atsushi Igarashi  <igarashi@cornet>

	* gmc/parser.mly: better error handling.  (error handling code
	should be added.)
	* gmc/lexer.mll: line counting inside comments.
	* gmc/main.ml: now knows the input file name.

	* examples/common/lexer.mll: "?" and ";" are now scanned as
	symbolic keywords.  So, for example, "??" can be a single token in
	some game.  Now, only special characters are parens and braces.

	Names consisting only of lowercase characters are now categorized
	as a token LCID.  The parser of each game should allow both LCIDs
	and alphabetical names (ID) as a rule name.

	* examples/common/link.ml: function lcid() added.
	
	* examples/*/keywords.ml: "?" and ";" are listed as keywords.

2008-03-31  Atsushi Igarashi  <igarashi@cornet>

	* examples/ML1/pp.ml, examples/nat/pp.ml, examples/common/link.ml:
	error handling in derivation search.
	* examples/common/Makefile: better dependency descrpition.

	* gmc/emit.ml, gmc/emit.mli, gmc/main.ml: now partly use
	Format.fprintf.  Should use it consistently.  Needs further
	tidying up.

2008-03-31  IGARASHI Atsushi  <igarashi@saturn.sato.kuis.kyoto-u.ac.jp>

	* gmc/parser.mly: allowing multiple metavars for one syntactic
	category.
	* gmc/syntax.ml, gmc/syntax.mli: accordingly changed.
	* examples/nat.gm: test of this feature.
	
2008-03-30  Atsushi Igarashi  <igarashi@cornet>

	* examples/ML1.gm: bug fix.
	* examples/ML1/parser.mly: support for partial derivations
	* gmc/emit.ml, gmc/main.ml, gmc/mySupport.ml: implementing backtracking.
	Hope it works.

2008-03-29  Atsushi Igarashi  <igarashi@cornet>

	* gmc/syntax.ml: augmenting judgment declarations with mode information.
	* gmc/parser.mly: Use semicolon to separate input and output arguments.
	* gmc/emit.ml: Modified accordingly.
	* examples/nat.gm: mode annotation attached.

	* gmc/emit.ml: module Prover to emit prover.
	* examples/common/lexer.mll: '?' for holes in partial judgment is
	added to the token list.
	* examples/nat/parser.mly: support for partial judgments.
	* examples/common/{main.ml, link.ml}: support of prover with -prove
	option. (combination with -full and -TeX options not supported
	yet.)

	* examples/common/Makefile.games: dependency description improved.

	* examples/nat.gm: exchanged the positons of tasu-kazu and
	tasareru-kazu.
	

2008-03-26  IGARASHI Atsushi  <igarashi@sato.kuis.kyoto-u.ac.jp>

	* examples/ML1/pp.ml: function to output judgments in TeX. still
	incomplete.

	* source code restructuring: lexer is functorized.  Modules
	for each game are packed in to one module.  Switch to choose a game.
	
2008-03-23  Atsushi Igarashi  <igarashi@cornet>

	* examples/common/syntax.ml, examples/nat/pp.ml: function to
	output derivations in TeX (-TeX flag).  

2008-03-22  Atsushi Igarashi  <igarashi@cornet>

	* gmc/emit.ml: function to format rules in TeX.

2008-03-21  IGARASHI Atsushi  <igarashi@sato.kuis.kyoto-u.ac.jp>

	* examples/common/main.ml: checker now takes more than one derivation.
	  Switch "-full" to display full derivations.
	* examples/common/lexer.mll: factoring out the common part of lexers.
	* examples/*/keywords.ml: keyword list, required by lexers
	* examples/ML1/pp.ml: pretty printer for ML1

2008-03-21  Atsushi Igarashi  <igarashi@cornet>

	* examples/common/syntax.ml: data structure and pretty printing
	functions common to all games.
	
	* examples/nat/pp.ml: pretty printer for natural numbers.
	
	* gmc/emit.ml: renamed from pp.ml to avoid collision with
	game-specific printers.

2008-03-20  Atsushi Igarashi  <igarashi@cornet>

	* examples/ML1: boolean added

2008-03-14  IGARASHI Atsushi  <igarashi@sato.kuis.kyoto-u.ac.jp>

	* examples/ML1.drv: sample derivation for ML1

	* examples/ML1: game for ML1 (int + binoperations)
	* changes for handling side conditions in rules.
	
2008-03-13  Atsushi Igarashi  <igarashi@cornet>

	* ML1.gm: formatting adjustment

